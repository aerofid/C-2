#include <iostream>
#include <curl/curl.h>
#include <string>

using namespace std;

// This function will be called by curl to write the data
size_t writeCallback(char* buf, size_t size, size_t nmemb, void* up) {
    // Cast the void pointer to a string pointer
    string* str = static_cast<string*>(up);

    // Append the data to the string
    str->append(buf, size * nmemb);

    // Return the number of bytes written
    return size * nmemb;
}

string extractDataFromWebsite(string url) {
    /*
    This function extracts data from a website and returns it as a string.

    Parameters:
    url (string): The URL of the website to extract data from.

    Returns:
    string: The data extracted from the website.
    */

    // Initialize curl
    CURL* curl = curl_easy_init();

    // Initialize the string to hold the data
    string data;

    if (curl) {
        // Set the URL to fetch
        curl_easy_setopt(curl, CURLOPT_URL, url.c_str());

        // Set the write callback function
        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, writeCallback);

        // Set the data pointer to the string
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &data);

        // Perform the request
        CURLcode res = curl_easy_perform(curl);

        // Check for errors
        if (res != CURLE_OK) {
            cerr << "Error: " << curl_easy_strerror(res) << endl;
        }

        // Clean up curl
        curl_easy_cleanup(curl);
    }

    // Return the data
    return data;
}
